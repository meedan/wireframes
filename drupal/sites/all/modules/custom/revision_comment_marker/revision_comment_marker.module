<?php

// FIXME: Currently this module only functions correctly when:
//        1) Comment threading is DISABLED for the node type
//        2) Comments ordering is OLDEST --> NEWEST

/**
 * Implements hook_theme().
 */
function revision_comment_marker_theme() {
  return array(
    'revision_comment_marker' => array(
      'arguments' => array('node' => NULL, 'revision' => NULL),
    ),
  );
}

/**
 * Implements hook_preprocess_comment_wrapper().
 */
function revision_comment_marker_preprocess_comment_wrapper(&$variables) {
  $node     = $variables['node'];
  $comments = &$variables['content']['comments'];

  $result = db_query("SELECT vid, timestamp
                        FROM {node_revision}
                       WHERE nid = :nid
                    ORDER BY vid ASC", array(':nid' => $node->nid));

  $revisions = array();
  $version   = 1;

  foreach ($result as $record) {
    $record->version = ($version++);
    $revisions[] = $record;
  }

  $revision = array_shift($revisions);

  foreach (element_children($comments) as $key) {
    if (!is_numeric($key)) {
      continue;
    }

    $comment = &$comments[$key];

    while ($revision && $revision->timestamp < $comment['#comment']->created) {
      revision_comment_marker_inject_marker($comment, $node, $revision);
      $revision = array_shift($revisions);
    }
  }

  if ($comments && $revision) {
    $last_comment = array();
    revision_comment_marker_inject_marker($last_comment, $node, $revision);
    $comments[] = $last_comment;
  }
}

/**
 * Adds a marker above a comment to indicate that a revision occurred before
 * this comment was posted.
 */
function revision_comment_marker_inject_marker(&$comment, $node, $revision) {
  $comment['#prefix'] .= theme('revision_comment_marker', array('node' => $node, 'revision' => $revision));
}

/**
 * Theme function to render the comment marker.
 */
function theme_revision_comment_marker(&$variables) {
  $node     = $variables['node'];
  $revision = $variables['revision'];

  return '<div id="revision-comment-marker-' . $revision->version . '" class="revision-comment-marker">' .
           l(
             '<span class="version-label">' . t('Version') . '</span> ' .
             '<span class="version-number">' . $revision->version . '</span> ' .
             '<span class="version-date"> &mdash; ' . format_date($revision->timestamp) . '</span> ',
             "node/$node->nid/revisions/$revision->vid/view",
             array('html' => TRUE)
            ) .
         '</div>';
}
